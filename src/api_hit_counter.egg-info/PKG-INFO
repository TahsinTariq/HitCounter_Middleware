Metadata-Version: 2.4
Name: api-hit-counter
Version: 0.1.0
Summary: A middleware for FastAPI to track API hits.
Author-email: Your Name <you@example.com>
Project-URL: Homepage, https://github.com/your-username/api-hit-counter
Project-URL: Bug Tracker, https://github.com/your-username/api-hit-counter/issues
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Framework :: FastAPI
Requires-Python: >=3.8
Description-Content-Type: text/markdown
Requires-Dist: fastapi
Requires-Dist: requests
Requires-Dist: uvicorn
Provides-Extra: dashboard
Requires-Dist: streamlit; extra == "dashboard"
Requires-Dist: pandas; extra == "dashboard"
Requires-Dist: plotly; extra == "dashboard"
Provides-Extra: dev
Requires-Dist: pytest-asyncio; extra == "dev"
Requires-Dist: httpx; extra == "dev"

# API Hit Counter

This project provides a simple API to track hits to other FastAPI projects.

## Setup

1.  **Clone the repository:**

    ```bash
    git clone https://github.com/your-username/api-hit-counter.git
    cd api-hit-counter
    ```

2.  **Install dependencies:**

    ```bash
    python3 -m venv venv
    source venv/bin/activate
    pip install -r requirements.txt
    ```

3.  **Run the API:**

    ```bash
    uvicorn main:app --host 0.0.0.0 --port 10101
    ```

    The API will be accessible on your network at port 10101.

## Usage

### Tracking Hits

To track hits to your other FastAPI projects, add the `HitCounterMiddleware` to your project's `main.py` file:

```python
from fastapi import FastAPI
from middleware import HitCounterMiddleware

app = FastAPI()

# Add the middleware
app.add_middleware(
    HitCounterMiddleware,
    project_name="My Awesome Project",
    counting_api_url="http://127.0.0.1:10101/track_hit"
)

@app.get("/")
async def root():
    return {"message": "Hello World"}
```

### Viewing Hits

To view the aggregated hit counts, send a `GET` request to the `/hits` endpoint:

```bash
curl http://127.0.0.1:10101/hits
```

### Detailed Metrics and Logging

In addition to aggregated counts, the API now tracks detailed metrics for each hit, including:

*   **Timestamp:** When the hit occurred.
*   **Client IP:** The IP address of the client making the request.
*   **HTTP Status Code:** The response status code (e.g.,  404, 500).
*   **Request Method:** The HTTP method used (GET, POST, PUT, DELETE).
*   **User Agent:** The client's user agent string.
*   **Response Time:** The time taken to process the request.

This raw data is logged to a CSV file named `api_hits_log.csv` inside the `logs` directory. The aggregated hit counts are stored in `logs/api_count_logs.json`.

## Dashboard

To visualize the API hit data, run the Streamlit dashboard:

```bash
streamlit run dashboard.py
```

This will open a web browser with the interactive dashboard.
